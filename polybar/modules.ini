[module/xwindow]
type = internal/xwindow
label = %title:0:60:...%

[module/pulseaudio]
type = internal/pulseaudio

format-volume-prefix = ""
format-volume-prefix-foreground = ${colors.txt1}
format-volume = <label-volume>

label-volume = "%percentage%%"

label-muted = muted
label-muted-foreground = ${colors.disabled}

[module/memory]
type = internal/memory
interval = 2
format-prefix = "󰍛 RAM "
format-prefix-foreground = ${colors.txt1}
label = %percentage_used:2%%

[module/cpu]
type = internal/cpu
interval = 2
format-prefix = " CPU "
format-prefix-foreground = ${colors.txt1}
label = %percentage:2%%

[network-base]
type = internal/network
interval = 5
format-connected = <label-connected>
format-disconnected = <label-disconnected>
label-disconnected = %{F#bd93f9}%ifname%%{F#707880} disconnected

[module/wlan]
inherit = network-base
interface-type = wireless
label-connected = %{F#bd93f9}%ifname%%{F-} %essid% %local_ip%

[module/eth]
inherit = network-base
interface-type = wired
label-connected = %{F#bd93f9}%ifname%%{F-} %local_ip%

[module/date]
type = internal/date
interval = 1

date = %I:%M %p
date-alt = %d %B %Y  %A  %H:%M:%S

label = %date%
label-foreground = ${colors.foreground}

format-prefix = "  "
format-prefix-foreground = ${colors.txt1}

[module/volume]
type = custom/text
content = "󰕾"
content-foreground = ${colors.txt1}
click-left = pactl set-sink-volume 0 +5% && notify-send "Volume: $(pactl get-sink-volume 0 | cut -d "/" -f2 | cut -d " " -f2-4)" -t 1000
click-right = pactl set-sink-volume 0 -5% && notify-send "Volume: $(pactl get-sink-volume 0 | cut -d "/" -f2 | cut -d " " -f2-4)" -t 1000
click-middle = pactl set-sink-mute 0 toggle && notify-send "$(pactl get-sink-mute 0)" -t 1000
content-padding = 1

[module/sep]
type = custom/text
content = "|"
content-foreground = ${colors.disabled}

[module/brightness]
type = custom/text
content = "󰃝"
content-foreground = ${colors.txt1}
click-left = xbacklight -inc 10% && notify-send "Brightness: $(xbacklight -get | cut -d "." -f1)" -t 1000
click-right = xbacklight -dec 10% && notify-send "Brightness: $(xbacklight -get | cut -d "." -f1)" -t 1000
click-middle = xbacklight -set $(printf "100\n90\n80\n70\n60\n50\n40\n30\n20\n10" | rofi -dmenu -p "Brightness") && notify-send "Brightness: $(xbacklight -get | cut -d "." -f1)" -t 1000
content-padding = 1

[module/scrot]
type = custom/text
content = "󰹑"
content-foreground = ${colors.txt1}
click-left = scrot -e 'xclip -selection clipboard -target image/png -i $f && mv $f ~/Pictures/Screenshots/' 
content-padding = 1

[module/scrot-selection]
type = custom/text
content = " 󰨵"
content-foreground = ${colors.txt1}
click-left = scrot -s -e 'xclip -selection clipboard -target image/png -i $f && mv $f ~/Pictures/Screenshots/' 

[module/i3]
type = internal/i3

; Only show workspaces defined on the same output as the bar
;
; Useful if you want to show monitor specific workspaces
; on different bars
;
; Default: false
pin-workspaces = true

; Show urgent workspaces regardless of whether the workspace is actually hidden 
; by pin-workspaces.
;
; Default: false
; New in version 3.6.0
show-urgent = true

; This will split the workspace name on ':'
; Default: false
strip-wsnumbers = true

; Sort the workspaces by index instead of the default
; sorting that groups the workspaces by output
; Default: false
index-sort = true

; Create click handler used to focus workspace
; Default: true
enable-click = true

; Create scroll handlers used to cycle workspaces
; Default: true
enable-scroll = true

; Wrap around when reaching the first/last workspace
; Default: true
wrapping-scroll = true

; Set the scroll cycle direction 
; Default: true
reverse-scroll = true

; Use fuzzy (partial) matching on labels when assigning 
; icons to workspaces
; Example: code;♚ will apply the icon to all workspaces 
; containing 'code' in the label
; Default: false
fuzzy-match = true

; ws-icon-[0-9]+ = <label>;<icon>
; NOTE: The <label> needs to match the name of the i3 workspace
; Neither <label> nor <icon> can contain a semicolon (;)
ws-icon-0 = 1;♚
ws-icon-1 = 2;♛
ws-icon-2 = 3;♜
ws-icon-3 = 4;♝
ws-icon-4 = 5;♞

ws-icon-default = ♟
; NOTE: You cannot skip icons, e.g. to get a ws-icon-6
; you must also define a ws-icon-5.
; NOTE: Icon will be available as the %icon% token inside label-*

; Available tags:
;   <label-state> (default) - gets replaced with <label-(focused|unfocused|visible|urgent)>
;   <label-mode> (default)
format = <label-state> <label-mode>

; Available tokens:
;   %mode%
; Default: %mode%
label-mode = %mode%
label-mode-padding = 2
label-mode-background = #e60053

; Available tokens:
;   %name%
;   %icon%
;   %index%
;   %output%
; Default: %icon% %name%
label-focused = %index%
label-focused-foreground = #ffffff
label-focused-background = #16171d
label-focused-underline = ${colors.txt1}
label-focused-padding = 2

; Available tokens:
;   %name%
;   %icon%
;   %index%
;   %output%
; Default: %icon% %name%
label-unfocused = %index%
label-unfocused-padding = 2

; Available tokens:
;   %name%
;   %icon%
;   %index%
;   %output%
; Default: %icon% %name%
label-visible = %index%
label-visible-underline = #555555
label-visible-padding = 4

; Available tokens:
;   %name%
;   %icon%
;   %index%
;   %output%
; Default: %icon% %name%
label-urgent = %index%
label-urgent-foreground = #000000
label-urgent-background = #bd2c40
label-urgent-padding = 4

; Separator in between workspaces
label-separator = 
label-separator-padding = 1
label-separator-foreground = #ffb52a

[module/player]
type=custom/script
format = <label>
label = %output:0:65:...%
exec = echo "$(playerctl metadata | grep "title" | cut -d " " -f17-)"
click-left = playerctl play-pause
interval = 2
format-padding = 1
format-foreground = ${colors.txt1}

[module/artist]
type=custom/script
format = <label>
label = %output:0:35:...%
exec = echo $(playerctl metadata | grep "artist" | cut -d " " -f16-)
click-left = playerctl play-pause
interval = 2
format-padding = 1
format-foreground = ${colors.txt1}

[module/by]
type=custom/text
content = 
content-foreground = ${colors.txt1}
click-left = playerctl play-pause
